{"version":3,"sources":["components/ContactList/ContactList.module.css","components/ContactItem/ContactItem.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js","components/Filter/Filter.module.css"],"names":["module","exports","ContactForm","state","name","number","handleChange","event","typeOfInput","currentTarget","input","value","setState","handleSubmit","preventDefault","props","onSubmit","this","className","styles","form__label","form__input","type","pattern","title","required","onChange","Component","ContactItem","id","onDelete","contact","onClick","ContactList","contacts","map","contact__item","Filter","filter__label","filter__input","App","filter","addContact","nameForAdd","numberForAdd","find","alert","shortid","generate","deleteContact","contactId","prevState","changeFilter","getVisibleContacts","normalizedFilter","toLocaleLowerCase","includes","localStorage","getItem","parsedContacts","JSON","parse","prevContacts","nextContacts","setItem","stringify","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3a043ea8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact__item\":\"ContactList_contact__item__1DBOu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"ContactItem_contact__rh_7-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form__label\":\"ContactForm_form__label__3zp3R\",\"form__input\":\"ContactForm_form__input__3fZhp\"};","import ProtoTypes from 'prop-types';\r\nimport { Component } from 'react';\r\nimport styles from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  static propTypes = { onSubmit: ProtoTypes.func.isRequired };\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = event => {\r\n    const typeOfInput = event.currentTarget.name;\r\n    const input = event.currentTarget.value;\r\n    this.setState({ [typeOfInput]: input });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    const { name, number } = this.state;\r\n    this.props.onSubmit(name, number);\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <label className={styles.form__label}>\r\n          Name\r\n          <input\r\n            className={styles.form__input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            value={name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <label className={styles.form__label}>\r\n          Number\r\n          <input\r\n            className={styles.form__input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            value={number}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import ProtoTypes from 'prop-types';\r\nimport styles from './ContactItem.module.css';\r\nconst ContactItem = ({ name, number, id, onDelete }) => {\r\n  return (\r\n    <>\r\n      <span className={styles.contact}>\r\n        {name}: {number}\r\n      </span>\r\n      <button type=\"button\" onClick={() => onDelete(id)}>\r\n        Delete\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nContactItem.propTypes = {\r\n  name: ProtoTypes.string.isRequired,\r\n  number: ProtoTypes.string.isRequired,\r\n  id: ProtoTypes.string.isRequired,\r\n  onDelete: ProtoTypes.func.isRequired,\r\n};\r\nexport default ContactItem;\r\n","import ProtoTypes from 'prop-types';\r\nimport styles from './ContactList.module.css';\r\nimport ContactItem from '../ContactItem/ContactItem';\r\nconst ContactList = ({ contacts, onDelete }) => (\r\n  <ul>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <li key={id} className={styles.contact__item}>\r\n        <ContactItem name={name} number={number} id={id} onDelete={onDelete} />\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactList.propTypes = {\r\n  contacts: ProtoTypes.array.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import ProtoTypes from 'prop-types';\r\nimport styles from './Filter.module.css';\r\nconst Filter = ({ value, onChange }) => (\r\n  <label className={styles.filter__label}>\r\n    Find contacts by name\r\n    <input\r\n      className={styles.filter__input}\r\n      type=\"text\"\r\n      name=\"filter\"\r\n      value={value}\r\n      onChange={onChange}\r\n    ></input>\r\n  </label>\r\n);\r\nFilter.propTypes = {\r\n  value: ProtoTypes.string.isRequired,\r\n  onChange: ProtoTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","//Moduls\r\nimport { Component } from 'react';\r\nimport shortid from 'shortid';\r\n//Components\r\nimport ContactForm from './components/ContactForm';\r\nimport ContactList from './components/ContactList';\r\nimport Filter from './components/Filter';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n    ],\r\n    filter: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    const contacts = localStorage.getItem('contacts');\r\n    const parsedContacts = JSON.parse(contacts);\r\n    if (parsedContacts) {\r\n      this.setState({ contacts: parsedContacts });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevState) {\r\n    const prevContacts = prevState.contacts;\r\n    const nextContacts = this.state.contacts;\r\n    if (prevContacts !== nextContacts) {\r\n      localStorage.setItem('contacts', JSON.stringify(nextContacts));\r\n    }\r\n  }\r\n\r\n  addContact = (nameForAdd, numberForAdd) => {\r\n    const isExistContact = this.state.contacts.find(\r\n      ({ name }) => name === nameForAdd,\r\n    );\r\n    if (isExistContact) {\r\n      alert(`${nameForAdd} is already in contacts`);\r\n      return;\r\n    }\r\n    const contact = {\r\n      id: shortid.generate(),\r\n      name: nameForAdd,\r\n      number: numberForAdd,\r\n    };\r\n    this.setState(({ contacts }) => ({ contacts: [contact, ...contacts] }));\r\n  };\r\n\r\n  deleteContact = contactId => {\r\n    this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(({ id }) => id !== contactId),\r\n    }));\r\n  };\r\n\r\n  changeFilter = event => {\r\n    this.setState({ filter: event.currentTarget.value });\r\n  };\r\n\r\n  getVisibleContacts = () => {\r\n    const { filter, contacts } = this.state;\r\n    const normalizedFilter = filter.toLocaleLowerCase();\r\n    return contacts.filter(({ name }) =>\r\n      name.toLocaleLowerCase().includes(normalizedFilter),\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const visibleContacts = this.getVisibleContacts();\r\n    const { filter } = this.state;\r\n    return (\r\n      <div>\r\n        <h1>Phonebook</h1>\r\n        <ContactForm onSubmit={this.addContact} />\r\n        <h2>Contacts</h2>\r\n        <Filter value={filter} onChange={this.changeFilter} />\r\n        <ContactList contacts={visibleContacts} onDelete={this.deleteContact} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter__label\":\"Filter_filter__label__2O-YO\",\"filter__input\":\"Filter_filter__input__3Zcoh\"};"],"sourceRoot":""}